package com.quizzy.quizzy.service;

import com.quizzy.quizzy.entity.Quiz;
import com.quizzy.quizzy.repository.QuizRepository;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;

@Service
public class QuizService {

    private static final Logger logger = LoggerFactory.getLogger(QuizService.class);
    private final QuizRepository quizRepository;

    public QuizService(QuizRepository quizRepository) {
        this.quizRepository = quizRepository;
    }

    /**
     * üî• [Issue 5] R√©cup√©rer tous les quiz d'un utilisateur
     */
    public List<Quiz> getQuizzesByUser(String ownerUid) {
        return quizRepository.findByOwnerUid(ownerUid);
    }

    /**
     * üî• [Issue 6] Cr√©er un nouveau quiz
     */
    public Quiz createQuiz(String ownerUid, String title, String description) {
        Quiz quiz = new Quiz();
        quiz.setOwnerUid(ownerUid);
        quiz.setTitle(title);
        quiz.setDescription(description);
        return quizRepository.save(quiz);
    }

    /**
     * üî• [Issue 7] R√©cup√©rer un quiz par ID (uniquement si l'utilisateur en est le propri√©taire)
     */
    public Optional<Quiz> getQuizById(String quizId, String ownerUid) {
        Optional<Quiz> quiz = quizRepository.findById(quizId);
        if (quiz.isPresent() && quiz.get().getOwnerUid().equals(ownerUid)) {
            return quiz;
        }
        return Optional.empty(); // Quiz non trouv√© ou appartient √† un autre utilisateur
    }

    /**
     * üî• [Issue 8] Mettre √† jour le titre d'un quiz
     */
    public boolean updateQuizTitle(String quizId, String ownerUid, String newTitle) {
        Optional<Quiz> quizOptional = quizRepository.findById(quizId);

        if (quizOptional.isPresent()) {
            Quiz quiz = quizOptional.get();

            if (!quiz.getOwnerUid().equals(ownerUid)) {
                logger.warn("üö´ Tentative de modification d'un quiz ne appartenant pas √† l'utilisateur !");
                return false; // L'utilisateur ne poss√®de pas ce quiz
            }

            quiz.setTitle(newTitle);
            quizRepository.save(quiz);
            return true;
        }

        logger.warn("‚ùå Quiz ID {} non trouv√©.", quizId);
        return false; // Quiz non trouv√©
    }
}
